[include]
    path = ~/.gitid
[alias]
    co       = checkout
    st       = status -bs
    sti      = status -bs --ignored
    ff       = pull --ff-only
    ffb      = !"f() { git fetch . origin/$1:$1 ; }; f"
    pushup   = !git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)
    root     = rev-parse --show-toplevel
    branches = !script -q /dev/null git branch --list -vv | tr '\\r' '~' | cut -d '~' -f 1
    bras     = !git branches
    bra      = branch
    ls       = ls-files
    glog     = log --pretty=format:'%C(yellow)%h %C(green)%ad%C(red)%d %C(reset)%s %C(blue)[%cn]%C(reset)' --decorate --date=short --graph
    aliases  = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/\\([^ ]* \\)/'`printf '\\033[32m%s\\033[0m' '\\1'`'\t/'
    ### list modified files in current repository with common ancestor from revision $1
    df       = !"f() { git diff --name-status $1... | sed 's/^M/'`printf '\\033[32mM\\033[0m'`'/' | sed 's/^D/'`printf '\\033[31mD\\033[0m'`'/'; }; f"
    ### diff current version of file $2 with common ancestor from revision $1
    dw       = !"f() { git diff $1... -- $2 ; }; f"
    ### cat file $2 at revision $1
    cat      = !"f() { git show $1:$2 ; }; f"
[core]
    excludesfile = ~/.gitignore
    whitespace = cr-at-eol,tab-in-indent
[diff]
	tool = deltawalker
    # algorithm = patience
[difftool]
	prompt = false
[difftool  "deltawalker"]
    cmd =  open -n -a DeltaWalker --wait-apps --args "$LOCAL" "$REMOTE"
[merge]
	tool = deltawalker
    # tool = p4merge
[mergetool]
    keepBackup = false
    keepTemporaries = false
    prompt = false
[mergetool "p4merge"]
    keepTemporaries = false
    prompt = false
[mergetool  "deltawalker"]
    cmd = open -n -a DeltaWalker --wait-apps --args "$LOCAL" "$REMOTE" "$BASE" -merged="$MERGED"
